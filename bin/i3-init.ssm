#!/bin/zsh

set -euxo pipefail

function cleanup {
  last_errno=$?
  [ $last_errno = 0 ] || notify-send 'i3 setup' "failed: $last_errno"
}

function poll_window {
  key=$1
  value=$2
  msg="$key ~ /$value/"
  clause="select(.${key} | test(\"${value}\"))"
  key2=${3:-}
  [ "$key2" ] && {
    value2=${4:-}
    msg="$msg && $key2 ~ /$value2/"
    clause="$clause | select(.${key2} | test(\"${value2}\"))"
  }
  echo "polling for window with: $msg ..."
  while true; do
    i3-msg -t get_tree \
      | jq -r '.. | objects | select(.window != null).window_properties | '${clause} \
      | grep -q . \
      && break
    sleep 0.5
  done
}

trap cleanup EXIT

notify-send 'i3 setup' 'begin'

if [ "{{/x/display0}}" != "{{/x/display1}}" ]; then
  xrandr --output '{{/x/display0}}' --auto --left-of '{{/x/display1}}'
fi

systemctl --user start xautolock
systemctl --user start redshift-gtk
systemctl --user start dunst

($HOME/bin/natural-scrolling || true)
sleep 5

i3-msg workspace 1
notify-send 'workspace 1' 'emacs'
emacsclient -c &
poll_window class '^Emacs$'
notify-send 'workspace 1' 'htop'
termite --role=htop -e htop &
poll_window class '^Termite$' window_role '^htop$'
i3-msg split v
notify-send 'workspace 1' 'tmux'
termite --role=meta -e cl-tmux &
poll_window class '^Termite$' window_role '^meta$'
i3-msg resize grow height 20 px or 20 ppt
i3-msg focus left

i3-msg workspace 5
notify-send 'workspace 5' 'chromium-work'
chromium --user-data-dir=$HOME/.config/chromium-work &
poll_window class '^Chromium$' instance "$HOME/.config/chromium-work"

i3-msg workspace 6
notify-send 'workspace 6' 'chromium-personal'
chromium &
poll_window class '^Chromium$' instance '^chromium$'
signal-desktop &
poll_window class '^Signal$'
i3-msg resize shrink width 20 px or 20 ppt
i3-msg focus left

i3-msg workspace 8
notify-send 'workspace 8' 'spotify'
spotify --force-device-scale-factor={{/x/gdk-scale}} &
poll_window class '^Spotify$'

i3-msg workspace 5
i3-msg workspace 1

notify-send 'systemctl' 'dropbox'
# Disable automatic updates, which have caused loops/cpu churn in the past.
install -dm0 ~/.dropbox-dist
systemctl --user start dropbox

notify-send 'i3 setup' 'complete'
